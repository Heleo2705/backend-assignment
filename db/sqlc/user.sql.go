// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: user.sql

package db

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO "User"(uid)
VALUES ($1)
RETURNING id, uid, created_at
`

func (q *Queries) CreateUser(ctx context.Context, uid sql.NullString) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, uid)
	var i User
	err := row.Scan(&i.ID, &i.Uid, &i.CreatedAt)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, uid, created_at FROM "User"
WHERE uid=$1
`

func (q *Queries) GetUser(ctx context.Context, uid sql.NullString) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, uid)
	var i User
	err := row.Scan(&i.ID, &i.Uid, &i.CreatedAt)
	return i, err
}
